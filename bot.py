import os
import json
import logging
import datetime
import gspread
import asyncio
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton, BotCommand
from telegram.ext import (
    ApplicationBuilder, CommandHandler, ContextTypes,
    MessageHandler, filters, CallbackQueryHandler, ConversationHandler
)
from telegram.constants import ParseMode
from google.oauth2.service_account import Credentials

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.environ.get("BOT_TOKEN")
if not TOKEN:
    raise ValueError("BOT_TOKEN is not set in environment variables")

creds_json = os.environ.get("GCP_CREDENTIALS_JSON")
if not creds_json:
    raise ValueError("GCP_CREDENTIALS_JSON is not set in environment variables")

ADMIN_ID = 407721399
CHANNEL_ID = -1002616572459
BOT_USERNAME = "@zhbankod_bot"

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –∞–Ω–∫–µ—Ç—ã
(ASK_NAME, ASK_PROJECT, ASK_BUDGET) = range(3)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Google Sheets
SCOPES = [
    "https://www.googleapis.com/auth/spreadsheets",
    "https://www.googleapis.com/auth/drive"
]
creds_dict = json.loads(creds_json)
creds = Credentials.from_service_account_info(creds_dict, scopes=SCOPES)
gs_client = gspread.authorize(creds)
sheet = gs_client.open("–ñ–ë–ê–ù–ö–û–î –ó–∞—è–≤–∫–∏").worksheet("–õ–∏—Å—Ç1")

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥—ã –º–µ–Ω—é
# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥ –º–µ–Ω—é
async def set_menu(bot):
    commands = [
        BotCommand("start", "üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ ‚Äî –ø–æ–∫–∞–∂–µ–º –º–∞–≥–∏—é"),
        BotCommand("menu", "üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é"),
        BotCommand("help", "‚ùì –ß—Ç–æ —É–º–µ–µ—Ç –±–æ—Ç –∏ –∫–∞–∫ –∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è")
    ]

    # –î–æ–±–∞–≤–∏–º –∫–æ–º–∞–Ω–¥—É publish —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞
    if ADMIN_ID:
        commands.append(BotCommand("publish", "üì¢ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç –≤ –∫–∞–Ω–∞–ª (–¥–ª—è –∞–¥–º–∏–Ω–∞)"))

    await bot.set_my_commands(commands)

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("üß† –£—Å–ª—É–≥–∏", callback_data="services")],
        [InlineKeyboardButton("üìÇ –ü—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç", callback_data="portfolio")],
        [InlineKeyboardButton("üì¨ –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data="form")],
        [InlineKeyboardButton("üí∞ –ó–∞–∫–∞–∑–∞—Ç—å –∏ –æ–ø–ª–∞—Ç–∏—Ç—å", callback_data="order")],
        [InlineKeyboardButton("üìû –°–≤—è–∑–∞—Ç—å—Å—è", url="https://t.me/zhbankov_alex")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    message_text = (
        "üëã –ü—Ä–∏–≤–µ—Ç! –ú—ã ‚Äî <b>–ñ–ë–ê–ù–ö–û–î</b>, —Å–æ–∑–¥–∞—ë–º Telegram-–±–æ—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–Ω–æ—Å—è—Ç –∑–∞—è–≤–∫–∏, –¥–µ–Ω—å–≥–∏ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É—é—Ç –≤–∞—à –±–∏–∑–Ω–µ—Å.\n\n"
        "‚öôÔ∏è –•–æ—Ç–∏—Ç–µ –∞–Ω–∫–µ—Ç—É, CRM, –ø—Ä–∏—ë–º –æ–ø–ª–∞—Ç—ã –∏–ª–∏ –∫–∞—Å—Ç–æ–º–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –ø–æ–¥ –≤–∞—à–∏ –∑–∞–¥–∞—á–∏?\n"
        "üëá –ü—Ä–æ—Å—Ç–æ –≤—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç ‚Äî –∏ –º—ã –ø–æ–∫–∞–∂–µ–º, –∫–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:"
    )

    if update.message:
        await update.message.reply_text(message_text, reply_markup=reply_markup, parse_mode="HTML")
    elif update.callback_query:
        await update.callback_query.edit_message_text(message_text, reply_markup=reply_markup, parse_mode="HTML")

    return ConversationHandler.END

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
async def callback_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    data = query.data
    await query.answer()

    if data == "services":
        await query.edit_message_text(
            "üß† <b>–ß—Ç–æ –º—ã —Å–¥–µ–ª–∞–µ–º –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞:</b>\n\n"
            "‚úÖ –ê–≤—Ç–æ—Ñ–æ—Ä–º—ã ‚Äî –∑–∞—è–≤–∫–∏ —Å—Ä–∞–∑—É –≤ Google Sheets –±–µ–∑ –ø–æ—Ç–µ—Ä—å\n"
            "‚úÖ –ü—Ä–∏—ë–º –æ–ø–ª–∞—Ç—ã –ø—Ä—è–º–æ –≤ –±–æ—Ç–µ (–±–µ–∑ —Å–∞–π—Ç–∞ –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞)\n"
            "‚úÖ –í–æ—Ä–æ–Ω–∫–∏, –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥ –∏ –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—ã ‚Äî —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞ –∞–≤—Ç–æ–ø–∏–ª–æ—Ç–µ\n"
            "‚úÖ AI, –ª–æ–≥–∏—Å—Ç–∏–∫–∞, —Ç–µ–Ω–¥–µ—Ä—ã ‚Äî –ª—é–±—ã–µ –∑–∞–¥–∞—á–∏ –ø–æ–¥ –∫–ª—é—á\n\n"
            "‚öôÔ∏è –í—Å—ë –ø–æ–¥ –∫–ª—é—á. –ë—ã—Å—Ç—Ä–æ. –ë–µ–∑ —à–∞–±–ª–æ–Ω–æ–≤. –¢–æ–ª—å–∫–æ —Ç–æ, —á—Ç–æ –ø—Ä–∏–Ω–æ—Å–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç.\n\n"
            "üëá –ù–∞–∂–º–∏—Ç–µ ¬´–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É¬ª –∏ —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –Ω—É–∂–Ω–æ –∏–º–µ–Ω–Ω–æ –≤–∞–º.",
            parse_mode="HTML"
        )

    elif data == "portfolio":
        await query.edit_message_text(
            "üìÇ <b>–ù–∞—à–∏ –∫–µ–π—Å—ã:</b>\n\n"
            "‚Ä¢ @Parser_newbot ‚Äî –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è –ª–æ–≥–∏—Å—Ç–æ–≤\n"
            "‚Ä¢ @Capitalpay_newbot ‚Äî –∞–Ω–∫–µ—Ç–∞ –¥–ª—è HighRisk –∫–æ–º–∞–Ω–¥ —Å –∞–≤—Ç–æ–≤–æ—Ä–æ–Ω–∫–æ–π\n\n"
            "–ú—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏. –ú—ã –∑–∞–ø—É—Å–∫–∞–µ–º —Ä–∞–±–æ—Ç–∞—é—â–∏–µ —Ä–µ—à–µ–Ω–∏—è.",
            parse_mode="HTML"
        )

    elif data == "form":
        await query.edit_message_text(
            "üì¨ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ <b>–∏–º—è</b> –∏ Telegram (–∏–ª–∏ –Ω–∏–∫):",
            parse_mode="HTML",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="cancel")]
            ])
        )
        return ASK_NAME

    elif data == "order":
        await query.edit_message_text(
            "üí∞ –•–æ—Ç–∏—Ç–µ —Ä–∞—Å—á—ë—Ç? –ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ ¬´–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É¬ª ‚Äî –∏ –º—ã —É—Ç–æ—á–Ω–∏–º –¥–µ—Ç–∞–ª–∏.\n\n"
            "üìä –£–∫–∞–∂–µ–º —Ü–µ–Ω—É, —Å—Ä–æ–∫–∏ –∏ –ø–æ–∫–∞–∂–µ–º –¥–µ–º–æ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É.",
            parse_mode="HTML",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("üì¨ –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data="form")]
            ])
        )

    elif data == "cancel":
        await start(update, context)

    else:
        await query.edit_message_text("‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.")

# –ê–Ω–∫–µ—Ç–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –º–µ–Ω—é
async def ask_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.callback_query and update.callback_query.data == "cancel":
        await update.callback_query.answer()
        await start(update.callback_query, context)
        return ConversationHandler.END

    context.user_data["name"] = update.message.text
    await update.message.reply_text(
        "‚úçÔ∏è –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, *–∫–∞–∫–æ–π –±–æ—Ç –≤–∞–º –Ω—É–∂–µ–Ω*:",
        parse_mode="Markdown",
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="cancel")]
        ])
    )
    return ASK_PROJECT

async def ask_project(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.callback_query and update.callback_query.data == "cancel":
        await update.callback_query.answer()
        await start(update.callback_query, context)
        return ConversationHandler.END

    context.user_data["project"] = update.message.text
    await update.message.reply_text(
        "üí∏ –£–∫–∞–∂–∏—Ç–µ *–∂–µ–ª–∞–µ–º—ã–π –±—é–¥–∂–µ—Ç* –ø—Ä–æ–µ–∫—Ç–∞:",
        parse_mode="Markdown",
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="cancel")]
        ])
    )
    return ASK_BUDGET

async def ask_budget(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.callback_query and update.callback_query.data == "cancel":
        await update.callback_query.answer()
        await start(update.callback_query, context)
        return ConversationHandler.END

    context.user_data["budget"] = update.message.text
    user = update.message.from_user
    data = context.user_data
    date = datetime.datetime.now().strftime('%Y-%m-%d %H:%M')
    tg_link = f"@{user.username}" if user.username else f"https://t.me/user?id={user.id}"

    try:
        sheet.append_row([
            data['name'],
            data['project'],
            data['budget'],
            tg_link,
            date
        ])
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –≤ Google Sheets: {e}")
        await update.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        return ConversationHandler.END

    text = (
        f"üì• *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!*\n\n"
        f"üë§ –ò–º—è: {data['name']}\n"
        f"üß† –ü—Ä–æ–µ–∫—Ç: {data['project']}\n"
        f"üí∏ –ë—é–¥–∂–µ—Ç: {data['budget']}\n"
        f"üîó Telegram: {tg_link}\n"
        f"üóìÔ∏è –î–∞—Ç–∞: {date}"
    )
    await context.bot.send_message(chat_id=ADMIN_ID, text=text, parse_mode="Markdown")
    await update.message.reply_text("‚úÖ –°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ Telegram.")
    return ConversationHandler.END

# /help –∫–æ–º–∞–Ω–¥–∞
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data.clear()

    await update.message.reply_text(
        "‚ùì <b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º –ñ–ë–ê–ù–ö–û–î:</b>\n\n"
        "üöÄ –ù–∞–∂–º–∏—Ç–µ <code>/start</code> –∏–ª–∏ <code>/menu</code>, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.\n\n"
        "üì¨ –í —Ä–∞–∑–¥–µ–ª–µ <b>¬´–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É¬ª</b> –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–º –∑–∞–ø—Ä–æ—Å:\n"
        "‚Ä¢ –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –∏–º—è –∏ Telegram\n"
        "‚Ä¢ –û–ø–∏—à–∏—Ç–µ –∏–¥–µ—é –±–æ—Ç–∞\n"
        "‚Ä¢ –£–∫–∞–∂–∏—Ç–µ –±—é–¥–∂–µ—Ç\n\n"
        "üìû –ò–ª–∏ —Å—Ä–∞–∑—É –ø–∏—à–∏—Ç–µ <a href='https://t.me/zhbankov_alex'>@zhbankov_alex</a>",
        parse_mode="HTML"
    )

    return ConversationHandler.END

# –û—Ç–º–µ–Ω–∞ –∞–Ω–∫–µ—Ç—ã
async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("‚ùå –ó–∞—è–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
    return ConversationHandler.END

async def publish_welcome_post(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_user.id != ADMIN_ID:
        await update.message.reply_text("‚õî –ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
        return

    text = (
        "<b>üìå –ñ–ë–ê–ù–ö–û–î ‚Äî –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ–º –≤—Å—ë, –∫—Ä–æ–º–µ —á–∞—è</b>\n\n"
        "ü§ñ –ú—ã —Å–æ–∑–¥–∞—ë–º Telegram-–±–æ—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –±–µ—Ä—É—Ç –Ω–∞ —Å–µ–±—è –≤—Å—é —Ä—É—Ç–∏–Ω—É:\n"
        "–∑–∞—è–≤–∫–∏, –æ–ø–ª–∞—Ç—ã, –∞–≤—Ç–æ–≤–æ—Ä–æ–Ω–∫–∏, –¥–æ–∫—É–º–µ–Ω—Ç—ã ‚Äî –∏ –¥–∞–∂–µ –æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏.\n\n"
        "üîπ –ó–∞—è–≤–∫–∏ ‚Äî —Å—Ä–∞–∑—É –≤ –ø–æ–Ω—è—Ç–Ω—É—é —Ç–∞–±–ª–∏—Ü—É\n"
        "üîπ –û–ø–ª–∞—Ç—ã ‚Äî –ø—Ä—è–º–æ –≤ Telegram\n"
        "üîπ –í–æ—Ä–æ–Ω–∫–∏, –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—ã, –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥\n"
        "üîπ –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∞–≥–µ–Ω—Ç—Å—Ç–≤, –∫–æ–º–∞–Ω–¥, –í–≠–î, —Ç—Ä–∞—Ñ–∏–∫–∞, –ª–æ–≥–∏—Å—Ç–∏–∫–∏\n\n"
        "üìÇ <b>–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã</b> ‚Äî –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤ —Ä–∞—Å—Ö–æ–¥—ã –∏ —Å–Ω–∏–∑–∏—Ç—å –Ω–∞–ª–æ–≥–∏.\n\n"
        "üìö –í —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ ‚Äî —Ä–µ–∞–ª—å–Ω—ã–µ –∫–µ–π—Å—ã, —Ñ–∏—à–∫–∏ –∏ —Ä–µ—à–µ–Ω–∏—è –ø–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Ä–∞–∑–Ω—ã—Ö –Ω–∏—à.\n\n"
        "‚òï –ü–æ–∫–∞ –≤—ã –ø—å—ë—Ç–µ —á–∞–π ‚Äî –ñ–ë–ê–ù–ö–û–î —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç.\n\n"
        "üìù <b>–•–æ—Ç–∏—Ç–µ –±–æ—Ç–∞ –ø–æ–¥ —Å–≤–æ—é –∑–∞–¥–∞—á—É?</b>\n"
        "üìé <a href='https://docs.google.com/spreadsheets/d/1eI1SkiA37tWKz9S5HCBl1XV8flODGOBL/edit?usp=sharing'>–°–∫–∞—á–∞—Ç—å –∫–æ—Ä–æ—Ç–∫–∏–π –±—Ä–∏—Ñ (2‚Äì3 –º–∏–Ω—É—Ç—ã)</a>\n\n"
        f"üëá –ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –ø—Ä—è–º–æ –≤ Telegram:\n{BOT_USERNAME}"
    )

    reply_markup = InlineKeyboardMarkup([
        [InlineKeyboardButton("–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", url=f"https://t.me/{BOT_USERNAME.replace('@', '')}")]
    ])

    message = await context.bot.send_message(
        chat_id=CHANNEL_ID,
        text=text,
        reply_markup=reply_markup,
        parse_mode=ParseMode.HTML,
        disable_web_page_preview=True
    )

    await context.bot.pin_chat_message(
        chat_id=CHANNEL_ID,
        message_id=message.message_id
    )

    await update.message.reply_text("‚úÖ –ü–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –∏ –∑–∞–∫—Ä–µ–ø–ª—ë–Ω –≤ –∫–∞–Ω–∞–ª–µ.")

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    app = ApplicationBuilder().token(TOKEN).build()
    loop = asyncio.get_event_loop()
    loop.run_until_complete(set_menu(app.bot))

    # –ö–æ–º–∞–Ω–¥—ã
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("menu", start))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(CommandHandler("publish", publish_welcome_post))

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ inline-–∫–Ω–æ–ø–æ–∫
    app.add_handler(CallbackQueryHandler(callback_handler))

    # –ê–Ω–∫–µ—Ç–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π
    conv_handler = ConversationHandler(
        entry_points=[CallbackQueryHandler(callback_handler, pattern="^form$")],
        states={
            ASK_NAME: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, ask_name),
                CallbackQueryHandler(callback_handler, pattern="^cancel$"),
            ],
            ASK_PROJECT: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, ask_project),
                CallbackQueryHandler(callback_handler, pattern="^cancel$"),
            ],
            ASK_BUDGET: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, ask_budget),
                CallbackQueryHandler(callback_handler, pattern="^cancel$"),
            ],
        },
        fallbacks=[
            CommandHandler("cancel", cancel),
            CommandHandler("help", help_command)
        ],
        allow_reentry=True,
        per_message=True
    )
    app.add_handler(conv_handler)

    logging.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω üöÄ")
    app.run_polling()

if __name__ == "__main__":
    main()


